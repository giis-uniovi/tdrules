openapi: "3.0.0"
info:
  version: 4.0.1
  title: TdRules API - Test Data Coverage Evaluation
  description: |
    A set of services to evaluate the coverage of test data.
    
    Coverage criteria are implemented in a set of rules, that when evaluated with respect to a given data store determine
    the coverage of the data store with respect to the query.
    Two kind of coverage rules are generated,
    Full Predicate Coverage (FPC) Rules and SQL Mutants.
  contact:
    name: Software Engineering Research Group (GIIS)
    url: https://giis.uniovi.es

paths:
  /healthcheck:
    get:
      summary: Healthcheck entry point
      tags:
        - TdRules
      responses:
        200:
          description: Returns OK if service is running
          content:
            text/plain:
              schema:
                type: string

  /version:
    get:
      summary: Returns information about the version and environment of the service
      tags:
        - TdRules
      responses:
        200:
          description: The information about the version and environment
          content:
            application/json:
              schema:
                $ref: "bodies-model.yml#/VersionBody" 

  /rules:
    post:
      summary: |
        Gets the FPC rules for a given query.
        Based on Modified Condition Decision Coverage (MCDC) for SQL.
        
        Each rule is a SQL-like statement that is covered if the execution against the data store returns at least one item.
        Query syntax depends on the underlying schema:
        
        - For RDB schemas is a full fledged SQL, 
        - For OpenApi schemas is a variant of SQL called Test Data Specification (TDS)
      tags:
        - TdRules
      requestBody:
        description: An object that includes the query, schema and an optional string with parameters
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "bodies-model.yml#/TdRulesBody"
      responses:
        200:
          description: The generated TdRules object that includes the FPC Rules or Mutants
          content:
            application/json:
              schema:
                $ref: "rules-model.yml#/TdRules" 

  /mutants:
    post:
      summary: Gets the set of mutants for a given SQL (SQLMutation).
        Only available for relational databases.
        Each rule is a mutant of the original SQL query.
        The mutant is dead (i.e. the rule is covered) if the execution against the database returns the same rows than the original query.
      tags:
        - TdRules
      requestBody:
        description: An object that includes the SQL query, schema and an optional string with parameters
        required: true
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "bodies-model.yml#/TdRulesBody"
      responses:
        200:
          description: The generated TdRules object with the mutants
          content:
            application/json:
              schema:
                $ref: "rules-model.yml#/TdRules" 

  /query/entities:
    post:
      summary: Gets the set of entities referenced in a query
      tags:
        - TdRules
      parameters:
        - in: query
          name: storetype
          schema:
            type: string
            default: ""
            description: |
              An optional string representing the store type to be aware in parsing store-dependent query features:
                - `openapi`: Enables handling the extended syntax for Test Data Specifications (TDS)
                - `sqlserver`: Enables handling bracket delimited identifiers
                - other store types do not need to specify this parameter
      requestBody:
        description: An object that includes the query to be processed
        content:
          application/json; charset=utf-8:
            schema:
              type: string
      responses:
        200:
          description: An object that contains the list of the entities referenced by the query
          content:
            application/json:
              schema:
                $ref: "bodies-model.yml#/QueryEntitiesBody" 

  /query/parameters:
    post:
      summary: Transforms a non parametrized query into a parametrized one
        by converting each literal into a parameter and returns the mapping parameter-values
      tags:
        - TdRules
      parameters:
        - in: query
          name: storetype
          schema:
            type: string
            default: ""
            description: |
              An optional string representing the store type to be aware in parsing store-dependent query features:
                - `openapi`: Enables handling the extended syntax for Test Data Specifications (TDS)
                - `sqlserver`: Enables handling bracket delimited identifiers
                - other store types do not need to specify this parameter
      requestBody:
        description: An object that includes the query to be processed
        content:
          application/json; charset=utf-8:
            schema:
              type: string
      responses:
        200:
          description: An object that contains the parametrized query and the mapping parameter-values
          content:
            application/json:
              schema:
                $ref: "bodies-model.yml#/QueryParametersBody" 

#all models in separate files