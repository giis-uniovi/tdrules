package giis.tdrules.store.loader.oa.script;

import java.util.List;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;

import giis.tdrules.store.loader.oa.GeneratedObject;

/**
 * Converts the objects generated by a live adapter into a Zerocode scenario
 */
public class ZerocodeWriter {

	private List<GeneratedObject> allGenerated;
	
	public ZerocodeWriter(List<GeneratedObject> allGenerated) {
		this.allGenerated = allGenerated;
	}
	public String getAsString() {
		ObjectMapper mapper = new ObjectMapper();
		ObjectNode scenario = mapper.createObjectNode();
		scenario.put("scenarioName", "Zerocode scenario generated by TdRules data loader");
		scenario.put("ignoreStepFailures", false);
		ArrayNode steps = mapper.createArrayNode();
		for (GeneratedObject obj : this.allGenerated) {
			ObjectNode step = mapper.createObjectNode();
			step.put("name", obj.id);
			step.put("url", obj.url);
			step.put("operation", obj.method);
			
			ObjectNode request = mapper.createObjectNode();
			request.set("body", obj.requestBody);
			step.set("request", request);
			
			ObjectNode assertions = mapper.createObjectNode();
			// do not add any assertion (for now)
			step.set("assertions", assertions);
			
			steps.add(step);
		}
		scenario.set("steps", steps);
		return scenario.toPrettyString();
	}

}
