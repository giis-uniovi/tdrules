{
  "swagger": "2.0",
  "info": {
    "description": "An open API for searching activities suitable for boy scouts and girl guides. The data is mirrored from www.aktivitetsbanken.se.",
    "version": "1.0 and 2.0",
    "title": "API for Aktivitetsbanken",
    "contact": {
      "name": "/dev/scout"
    }
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "activities"
    },
    {
      "name": "media files"
    },
    {
      "name": "system messages"
    },
    {
      "name": "system status"
    },
    {
      "name": "tags or categories"
    },
    {
      "name": "users"
    },
    {
      "name": "user content"
    }
  ],
  "paths": {
    "/v2/activities/{id}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Read a specific activity",
        "description": "",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "activities"
        ],
        "summary": "Update an activity with new information. Activity properties not specified in the request will be cleared.",
        "description": "",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActivityProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "activities"
        ],
        "summary": "Delete an activity",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "patch": {
        "tags": [
          "activities"
        ],
        "summary": "Update an activity with new information. Only the properties specified in the request will be updated.",
        "description": "",
        "operationId": "patch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActivityProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          }
        }
      }
    },
    "/v2/activities": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Search for activities",
        "description": "",
        "operationId": "all",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Words to look for in activity names. Prefix word with minus character to exclude activities with that word.",
            "required": false,
            "type": "string"
          },
          {
            "name": "text",
            "in": "query",
            "description": "Words to look for in any text field. Prefix word with minus character to exclude activities with that word.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Show featured (hand-picked by editor) activities",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Show activites with at least one of the specified tags. Comma-separated list of tag ids.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ages",
            "in": "query",
            "description": "Find activities suited for certain ages. Comma-separated list of ages.",
            "required": false,
            "type": "string"
          },
          {
            "name": "participants",
            "in": "query",
            "description": "Find activities suited for certain number of participants.",
            "required": false,
            "type": "string"
          },
          {
            "name": "durations",
            "in": "query",
            "description": "Find activities which can be completed in a certain amount of time. Unit: minutes.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Find specific activites based on their internal identifiers. It is not expected that end-users know these number. Comma-separated list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "my_favourites",
            "in": "query",
            "description": "Limit result to activities which the current user (as determined by API key) has marked as favourites.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ratings_count_min",
            "in": "query",
            "description": "Show activities which have been rated by at least this many users",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ratings_average_min",
            "in": "query",
            "description": "Show activities whose average rating is at this amount.",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "random",
            "in": "query",
            "description": "Limit result to a number of random activities matching the other conditions.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "favourites",
            "in": "query",
            "description": "Limit result to the overall favourite activities. This means a list of activities sorted by the number of users who have marked them as their favourites. This parameter cannot be used together with any other filtering parameters (meaning that it is not possible to use it to, for example, show favourites for a particular category or age group).",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Create a new activity",
        "description": "",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActivityProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          }
        }
      }
    },
    "/v2/activities/{id}/rating": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get the end-user's rating the an activity",
        "description": "",
        "operationId": "getRating",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Set the end-user's rating the an activity",
        "description": "",
        "operationId": "postRating",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActivityRatingAttrs"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "activities"
        ],
        "summary": "Remove the end-user's rating the an activity",
        "description": "",
        "operationId": "deleteRating",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/media_files/{id}": {
      "get": {
        "tags": [
          "media files"
        ],
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "media files"
        ],
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MediaFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MediaFile"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "tags": [
          "media files"
        ],
        "summary": "Delete a media file. By default, deletes even if referenced by activities.",
        "description": "",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "verify_unused",
            "in": "query",
            "description": "Verify that media file is not referenced by any activities before deleting it.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/media_files": {
      "get": {
        "tags": [
          "media files"
        ],
        "summary": "List all media files referenced in activities.",
        "description": "",
        "operationId": "all",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "Filter media files based on their path. The parameter value may be found anywhere in the URI.Case sensitive.",
            "required": false,
            "type": "string"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "media files"
        ],
        "summary": "Add a media file to the system. Specify URL of media file or use 'data URI' to upload base64-encoded file.",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MediaFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MediaFile"
            }
          }
        }
      }
    },
    "/v1/media_files/{id}/file": {
      "get": {
        "tags": [
          "media files"
        ],
        "summary": "Download media file. Can resize images (but images will never be enlarged).",
        "description": "",
        "operationId": "downloadFile",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "size",
            "in": "query",
            "description": "The maximum width/height of returned images. The specified value will be rounded up to the next 'power of 2', e.g. 256, 512, 1024 and so on.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/system_messages/{id}": {
      "get": {
        "tags": [
          "system messages"
        ],
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "system messages"
        ],
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SystemMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SystemMessage"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "tags": [
          "system messages"
        ],
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/system_messages": {
      "get": {
        "tags": [
          "system messages"
        ],
        "operationId": "all",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "valid",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "now",
              "now_and_future"
            ]
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "system messages"
        ],
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SystemMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SystemMessage"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/system/roles": {
      "get": {
        "tags": [
          "system status"
        ],
        "operationId": "roles",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RolesView"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/system/ping": {
      "get": {
        "tags": [
          "system status"
        ],
        "operationId": "ping",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/tags/{id}": {
      "get": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/tags": {
      "get": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "all",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "query",
            "description": "Returned tags must have this text in their group names.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Returned tags must have this text in their names.",
            "required": false,
            "type": "string"
          },
          {
            "name": "min_activities_count",
            "in": "query",
            "description": "Returned tags must have this text in their names.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/users/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "profile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserProfileView"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "all",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/activities/{id}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Read a specific activity",
        "description": "",
        "operationId": "get_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "activities"
        ],
        "summary": "Update an activity with new information. Activity properties not specified in the request will be cleared.",
        "description": "",
        "operationId": "update_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActivityProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "activities"
        ],
        "summary": "Delete an activity",
        "description": "",
        "operationId": "delete_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "patch": {
        "tags": [
          "activities"
        ],
        "summary": "Update an activity with new information. Only the properties specified in the request will be updated.",
        "description": "",
        "operationId": "patch_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActivityProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          }
        }
      }
    },
    "/v1/activities": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Search for activities",
        "description": "",
        "operationId": "all",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attrs",
            "in": "query",
            "description": "The activity attributes to include in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "text",
            "in": "query",
            "description": "Words to look for in any text field. Prefix word with minus character to exclude activities with that word.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Show featured (hand-picked by editor) activities",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Show activites with at least one of the specified tags. Comma-separated list of category ids.",
            "required": false,
            "type": "string"
          },
          {
            "name": "age_1",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "age_2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "participants",
            "in": "query",
            "description": "Find activities suited for certain number of participants.",
            "required": false,
            "type": "string"
          },
          {
            "name": "time_1",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time_2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "my_favourites",
            "in": "query",
            "description": "Limit result to activities which the current user (as determined by API key) has marked as favourites.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ratings_count_min",
            "in": "query",
            "description": "Show activities which have been rated by at least this many users",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ratings_average_min",
            "in": "query",
            "description": "Show activities whose average rating is at this amount.",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "random",
            "in": "query",
            "description": "Limit result to a number of random activities matching the other conditions.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "favourites",
            "in": "query",
            "description": "Limit result to the overall favourite activities. This means a list of activities sorted by the number of users who have marked them as their favourites. This parameter cannot be used together with any other filtering parameters (meaning that it is not possible to use it to, for example, show favourites for a particular category or age group).",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Create a new activity",
        "description": "",
        "operationId": "create_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActivityProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          }
        }
      }
    },
    "/v1/activities/{id}/rating": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get the end-user's rating the an activity",
        "description": "",
        "operationId": "getRating_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Set the end-user's rating the an activity",
        "description": "",
        "operationId": "postRating_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActivityRatingAttrs"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "activities"
        ],
        "summary": "Remove the end-user's rating the an activity",
        "description": "",
        "operationId": "deleteRating_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/categories/{id}": {
      "get": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "get_2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "update_2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "delete_2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v1/categories": {
      "get": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "all_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "query",
            "description": "Returned tags must have this text in their group names.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Returned tags must have this text in their names.",
            "required": false,
            "type": "string"
          },
          {
            "name": "min_activities_count",
            "in": "query",
            "description": "Returned tags must have this text in their names.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "attrs",
            "in": "query",
            "description": "The attributes to include in the response. Comma-separated list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "tags or categories"
        ],
        "operationId": "create_2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/favourites": {
      "get": {
        "tags": [
          "user content"
        ],
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "headers": {}
          }
        }
      },
      "post": {
        "tags": [
          "user content"
        ],
        "operationId": "put",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutFavouritesEntity"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Activity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "properties_revisions": {
          "type": "array",
          "xml": {
            "name": "propertiesRevisions",
            "wrapped": true
          },
          "items": {
            "xml": {
              "name": "properties"
            },
            "$ref": "#/definitions/ActivityProperties"
          }
        },
        "properties": {
          "$ref": "#/definitions/ActivityProperties"
        },
        "ratings_count": {
          "type": "integer",
          "format": "int64"
        },
        "ratings_sum": {
          "type": "integer",
          "format": "int64"
        },
        "favourites_count": {
          "type": "integer",
          "format": "int64"
        },
        "ratings_average": {
          "type": "number",
          "format": "double"
        },
        "related": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "ActivityProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "date_published": {
          "type": "string",
          "format": "date-time"
        },
        "date_created": {
          "type": "string",
          "format": "date-time"
        },
        "date_updated": {
          "type": "string",
          "format": "date-time"
        },
        "description_material": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20000
        },
        "description_introduction": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20000
        },
        "description_prepare": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20000
        },
        "description_main": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20000
        },
        "description_safety": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20000
        },
        "description_notes": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20000
        },
        "age_min": {
          "type": "integer",
          "format": "int32",
          "maximum": 100
        },
        "age_max": {
          "type": "integer",
          "format": "int32",
          "maximum": 100
        },
        "participants_min": {
          "type": "integer",
          "format": "int32"
        },
        "participants_max": {
          "type": "integer",
          "format": "int32"
        },
        "time_min": {
          "type": "integer",
          "format": "int32"
        },
        "time_max": {
          "type": "integer",
          "format": "int32"
        },
        "featured": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "xml": {
            "wrapped": true
          },
          "items": {
            "xml": {
              "name": "tag"
            },
            "$ref": "#/definitions/Tag"
          }
        },
        "media_files": {
          "type": "array",
          "xml": {
            "name": "mediaFiles",
            "wrapped": true
          },
          "items": {
            "xml": {
              "name": "mediaFile"
            },
            "$ref": "#/definitions/MediaFile"
          }
        },
        "author": {
          "$ref": "#/definitions/User"
        },
        "activity": {
          "$ref": "#/definitions/Activity"
        }
      }
    },
    "MediaFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "capture_date": {
          "type": "string",
          "format": "date-time"
        },
        "copy_right": {
          "type": "string"
        },
        "author": {
          "type": "string"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "group": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "media_file": {
          "$ref": "#/definitions/MediaFile"
        },
        "activities_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email_address": {
          "type": "string"
        },
        "authorization_level": {
          "type": "integer",
          "format": "int32"
        },
        "identities": {
          "type": "array",
          "xml": {
            "wrapped": true
          },
          "items": {
            "xml": {
              "name": "identity"
            },
            "$ref": "#/definitions/UserIdentity"
          }
        }
      }
    },
    "UserIdentity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "date_created": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "enum": [
            "API",
            "GOOGLE"
          ]
        },
        "value": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "ActivityRatingAttrs": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "integer",
          "format": "int32"
        },
        "favourite": {
          "type": "boolean"
        }
      }
    },
    "SystemMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valid_to": {
          "type": "string",
          "format": "date-time"
        },
        "valid_from": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RolesView": {
      "type": "object",
      "properties": {
        "permission_levels": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "role_levels": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "UserProfileView": {
      "type": "object",
      "properties": {
        "role_permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "PutFavouritesEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}